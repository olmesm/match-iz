/*
 * match-iz
 * v1.11.0
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var N=Object.prototype,P=N.toString,m=t=>n=>typeof n===t,u=t=>n=>n instanceof t,{isArray:e}=Array,w=t=>P.call(t)==="[object Arguments]",R=t=>u(Date)(t)&&!isNaN(t),c=m("function"),f=m("string"),S=t=>t===t&&m("number")(t),W=t=>t!==null&&m("object")(t),O=u(RegExp),p=t=>t===null||!W(t)||w(t)?!1:Object.getPrototypeOf(t)===N;function z(t){return(...n)=>A(...n)(t)}var A=(...t)=>{let n;return o=>t.find(s=>{let r=s(o),{matched:x,value:b}=r||{};return[x,b].every(c)?x(o)&&(n=b(o),!0):r&&(n=r)})&&n},B=t=>n=>({matched:()=>!0,value:()=>c(t)?t(n):t}),C=t=>n=>o=>({matched:()=>i(t,o,s=>o=s),value:()=>c(n)?f(o)&&O(t)?n(o.match(t)):n(o):n}),i=(t,n,o)=>p(t)?Object.keys(t).every(s=>i(t[s],n==null?void 0:n[s],o)):e(t)?e(n)?t.length===n.length&&t.every((s,r)=>i(s,n==null?void 0:n[r],o)):t.some(s=>i(s,n,o)):c(t)?t(n,o):f(n)&&O(t)?t.test(n):t===n||[t,n].every(Number.isNaN),G=(...t)=>(n,o)=>t.length===0||(c(t[0])?t[0](n):i(t[0],n,o))?(o(n),!0):!1,H=t=>(n,o)=>!i(t,n,o),D=(...t)=>t.flat(),J=(...t)=>(n,o)=>t.flat().every(s=>i(s,n,o)),E=t=>t!==t||!t&&t!==0&&t!==!1||e(t)&&!t.length||p(t)&&!Object.keys(t).length,K=t=>!E(t),L=t=>g(n=>n>t),M=t=>g(n=>n<t),Q=t=>g(n=>n>=t),T=t=>g(n=>n<=t),U=(t,n)=>g(o=>o>=t&&o<=n),V=t=>j(n=>n.startsWith(t)),X=t=>j(n=>n.endsWith(t)),Y=t=>F(n=>n.includes(t)),Z=D,_=(...t)=>n=>p(n)&&(([o,s])=>o.length&&o.every(r=>s.includes(r)))([t.flat(),Object.keys(n)]),$=t=>!!t,l=t=>!t,y=t=>new Proxy({},{get:()=>t}),j=t=>n=>f(n)&&t(n),g=t=>n=>S(n)&&t(n),F=t=>n=>(e(n)||f(n))&&t(n);export{A as against,J as allOf,D as anyOf,K as defined,E as empty,X as endsWith,l as falsy,L as gt,Q as gte,_ as hasOwn,U as inRange,Z as includedIn,Y as includes,u as instanceOf,e as isArray,R as isDate,c as isFunction,S as isNumber,p as isPojo,O as isRegExp,f as isString,M as lt,T as lte,z as match,H as not,B as otherwise,G as pluck,y as spread,V as startsWith,$ as truthy,C as when};
