/*
 * match-iz
 * v1.0.3
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var f=(t,s)=>()=>(s||t((s={exports:{}}).exports,s),s.exports);var A=f(($,p)=>{var m=Object.prototype,c=t=>typeof t,h=m.toString,b=t=>h.call(t)==="[object Arguments]",w=t=>c(t)==="function",O=t=>c(t)==="object"&&t!==null,N=t=>Array.isArray(t),q=t=>t instanceof RegExp,F=t=>c(t)==="string",k=t=>c(t)==="number",M=t=>t===null||!O(t)||b(t)?!1:Object.getPrototypeOf(t)===m;p.exports={isArguments:b,isFunction:w,isObject:O,isArray:N,isRegExp:q,isString:F,isNumber:k,isPojo:M}});var Z=f((l,R)=>{var{isFunction:e,isRegExp:d,isPojo:j,isArray:u,isString:i,isNumber:z}=A();function S(...t){let s;return n=>t.find(W=>{let r=W(n),{matched:y,value:g}=r||{};return[y,g].every(e)?y(n)&&(s=g(n),!0):r&&(s=r)})&&s}function B(t){return(...s)=>S(...s)(t)}var C=t=>s=>n=>({matched:()=>x(t,n),value:()=>e(s)?i(n)&&d(t)?s(n.match(t)):s(n):s}),D=t=>s=>e(t)?t(s):t,x=(t,s)=>j(t)?Object.keys(t).every(n=>P(t[n],s[n])):u(t)?t.some(n=>x(n,s)):P(t,s),P=(t,s)=>e(t)?t(s):i(s)&&d(t)?t.test(s):t===s,G=t=>!!t,H=t=>!t&&t!==0||u(t)&&!t.length||j(t)&&!Object.keys(t).length,I=t=>o(s=>s>t),J=t=>o(s=>s<t),K=t=>o(s=>s>=t),L=t=>o(s=>s<=t),Q=o((t,s)=>n=>n>=t&&n<=s),T=t=>E(s=>s.startsWith(t)),U=t=>E(s=>s.endsWith(t)),V=t=>Y(s=>s.includes(t)),X=t=>new Proxy({},{get:()=>t});function E(t){return(...s)=>s.every(i)&&t(...s)}function Y(t){return(...s)=>s.every(n=>u(n)||i(n))&&t(...s)}function o(t){return(...s)=>s.every(z)&&t(...s)}R.exports={against:S,match:B,defined:G,empty:H,gt:I,lt:J,gte:K,lte:L,inRange:Q,startsWith:T,endsWith:U,includes:V,spread:X,when:C,otherwise:D}});export default Z();
