/*
 * match-iz
 * v2.0.2
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var S=Object.getOwnPropertySymbols;var D=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable;var P=(t,n)=>{var o={};for(var s in t)D.call(t,s)&&n.indexOf(s)<0&&(o[s]=t[s]);if(t!=null&&S)for(var s of S(t))n.indexOf(s)<0&&F.call(t,s)&&(o[s]=t[s]);return o};var w=Object.prototype,R=w.toString,O=t=>n=>typeof n===t,x=t=>n=>n instanceof t,{isArray:e}=Array,E=t=>R.call(t)==="[object Arguments]",I=t=>x(Date)(t)&&!isNaN(t),i=O("function"),g=O("string"),W=t=>t===t&&O("number")(t),q=t=>t!==null&&O("object")(t),N=x(RegExp),p=t=>t===null||!q(t)||E(t)?!1:Object.getPrototypeOf(t)===w;function Q(t){return(...n)=>z(...n)(t)}var z=(...t)=>{let n;return o=>t.find(s=>{let r=s(o),{matched:m,value:u}=r||{};return[m,u].every(i)?m(o)&&(n=u(o),!0):r&&(n=r)})&&n},T=t=>n=>({matched:()=>!0,value:()=>i(t)?t(n):t}),U=t=>n=>o=>({matched:()=>c(t,o,s=>o=s),value:()=>i(n)?g(o)&&N(t)?n(...B(o.match(t))):n(o):n}),B=t=>{let{groups:n}=t;return n?[n,t]:[t]},c=(t,n,o)=>p(t)?Object.keys(t).every(s=>c(t[s],n==null?void 0:n[s],o)):e(t)?e(n)?t.length===n.length&&t.every((s,r)=>c(s,n==null?void 0:n[r],o)):t.some(s=>c(s,n,o)):i(t)?t(n,o):g(n)&&N(t)?t.test(n):t===n||[t,n].every(Number.isNaN),V=(...t)=>(n,o)=>t.length===0||(i(t[0])?t[0](n):c(t[0],n,o))?(o(n),!0):!1,X=t=>(n,o)=>!c(t,n,o),C=(...t)=>t.flat(),Y=(...t)=>(n,o)=>t.flat().every(s=>c(s,n,o)),G=t=>t!==t||!t&&t!==0&&t!==!1||e(t)&&!t.length||p(t)&&!Object.keys(t).length,Z=t=>!G(t),_=t=>f(n=>n>t),$=t=>f(n=>n<t),M=t=>f(n=>n>=t),d=t=>f(n=>n<=t),y=(t,n)=>f(o=>o>=t&&o<=n),l=t=>A(n=>n.startsWith(t)),v=t=>A(n=>n.endsWith(t)),h=t=>H(n=>n.includes(t)),k=C,a=(...t)=>n=>p(n)&&(([o,s])=>o.length&&o.every(r=>s.includes(r)))([t.flat(),Object.keys(n)]),tt=o=>{var s=o,{getValue:t}=s,n=P(s,["getValue"]);return Object.entries(n).reduce((r,[m,u])=>Object.assign(r,{[m]:b=>j=>({matched:()=>u(j),value:()=>i(b)?b(t(j)):b})}),{})},nt=t=>!!t,ot=t=>!t,st=t=>new Proxy({},{get:()=>t}),A=t=>n=>g(n)&&t(n),f=t=>n=>W(n)&&t(n),H=t=>n=>(e(n)||g(n))&&t(n);export{z as against,Y as allOf,C as anyOf,tt as cata,Z as defined,G as empty,v as endsWith,ot as falsy,_ as gt,M as gte,a as hasOwn,y as inRange,k as includedIn,h as includes,x as instanceOf,e as isArray,I as isDate,i as isFunction,W as isNumber,p as isPojo,N as isRegExp,g as isString,$ as lt,d as lte,Q as match,X as not,T as otherwise,V as pluck,st as spread,l as startsWith,nt as truthy,U as when};
