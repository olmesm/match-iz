/*
 * match-iz
 * v1.6.3
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var A=Object.prototype,S=A.toString,g=t=>typeof t,P=t=>S.call(t)==="[object Arguments]",r=t=>Array.isArray(t),i=t=>g(t)==="function",x=t=>g(t)==="number",E=t=>g(t)==="object"&&t!==null,p=t=>t instanceof RegExp,s=t=>g(t)==="string",u=t=>t===null||!E(t)||P(t)?!1:Object.getPrototypeOf(t)===A;function z(t){return(...n)=>R(...n)(t)}function R(...t){let n;return o=>t.find(f=>{let m=f(o),{matched:O,value:j}=m||{};return[O,j].every(i)?O(o)&&(n=j(o),!0):m&&(n=m)})&&n}var B=t=>n=>({matched:()=>!0,value:()=>i(t)?t(n):t}),C=t=>n=>o=>({matched:()=>e(t,o),value:()=>i(n)?s(o)&&p(t)?n(o.match(t)):n(o):n}),e=(t,n)=>u(t)?Object.keys(t).every(o=>b(t[o],n==null?void 0:n[o])):r(t)?r(n)?t.length===n.length&&t.every((o,f)=>b(o,n==null?void 0:n[f])):t.some(o=>e(o,n)):b(t,n),b=(t,n)=>u(t)||r(t)?e(t,n):i(t)?t(n):s(n)&&p(t)?t.test(n):t===n||[t,n].every(Number.isNaN),W=t=>t!==t||!t&&t!==0&&t!==!1||r(t)&&!t.length||u(t)&&!Object.keys(t).length,D=t=>!W(t),G=t=>c(n=>n>t),H=t=>c(n=>n<t),I=t=>c(n=>n>=t),J=t=>c(n=>n<=t),K=(t,n)=>c(o=>o>=t&&o<=n),L=t=>N(n=>n.startsWith(t)),M=t=>N(n=>n.endsWith(t)),Q=t=>w(n=>n.includes(t)),T=t=>!!t,U=t=>!t,V=t=>new Proxy({},{get:()=>t});function N(t){return n=>s(n)&&t(n)}function w(t){return n=>(r(n)||s(n))&&t(n)}function c(t){return n=>x(n)&&t(n)}export{R as against,D as defined,W as empty,M as endsWith,U as falsy,G as gt,I as gte,K as inRange,Q as includes,r as isArray,i as isFunction,x as isNumber,u as isPojo,p as isRegExp,s as isString,H as lt,J as lte,z as match,B as otherwise,V as spread,L as startsWith,T as truthy,C as when};
