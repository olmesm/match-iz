/*
 * match-iz
 * v1.9.0
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var matchiz=(()=>{var j=Object.defineProperty;var R=t=>j(t,"__esModule",{value:!0});var W=(t,n)=>{R(t);for(var o in n)j(t,o,{get:n[o],enumerable:!0})};var $={};W($,{against:()=>N,allOf:()=>C,anyOf:()=>S,defined:()=>D,empty:()=>P,endsWith:()=>Q,falsy:()=>Y,gt:()=>G,gte:()=>J,hasOwn:()=>V,inRange:()=>L,includedIn:()=>U,includes:()=>T,isArray:()=>s,isFunction:()=>r,isNumber:()=>O,isPojo:()=>f,isRegExp:()=>p,isString:()=>i,lt:()=>H,lte:()=>K,match:()=>I,not:()=>B,otherwise:()=>q,spread:()=>Z,startsWith:()=>M,truthy:()=>X,when:()=>z});var x=Object.prototype,E=x.toString,u=t=>n=>typeof n===t,F=t=>E.call(t)==="[object Arguments]",s=Array.isArray,r=u("function"),i=u("string"),O=t=>t===t&&u("number")(t),y=t=>t!==null&&u("object")(t),p=t=>t instanceof RegExp,f=t=>t===null||!y(t)||F(t)?!1:Object.getPrototypeOf(t)===x;function I(t){return(...n)=>N(...n)(t)}var N=(...t)=>{let n;return o=>t.find(e=>{let g=e(o),{matched:b,value:A}=g||{};return[b,A].every(r)?b(o)&&(n=A(o),!0):g&&(n=g)})&&n},q=t=>n=>({matched:()=>!0,value:()=>r(t)?t(n):t}),z=t=>n=>o=>({matched:()=>c(t,o),value:()=>r(n)?i(o)&&p(t)?n(o.match(t)):n(o):n}),c=(t,n)=>f(t)?Object.keys(t).every(o=>c(t[o],n==null?void 0:n[o])):s(t)?s(n)?t.length===n.length&&t.every((o,e)=>c(o,n==null?void 0:n[e])):t.some(o=>c(o,n)):r(t)?t(n):i(n)&&p(t)?t.test(n):t===n||[t,n].every(Number.isNaN),B=t=>n=>!c(t,n),S=(...t)=>t.flat(),C=(...t)=>n=>t.flat().every(o=>c(o,n)),P=t=>t!==t||!t&&t!==0&&t!==!1||s(t)&&!t.length||f(t)&&!Object.keys(t).length,D=t=>!P(t),G=t=>m(n=>n>t),H=t=>m(n=>n<t),J=t=>m(n=>n>=t),K=t=>m(n=>n<=t),L=(t,n)=>m(o=>o>=t&&o<=n),M=t=>w(n=>n.startsWith(t)),Q=t=>w(n=>n.endsWith(t)),T=t=>_(n=>n.includes(t)),U=S,V=(...t)=>n=>f(n)&&(([o,e])=>o.length&&o.every(g=>e.includes(g)))([t.flat(),Object.keys(n)]),X=t=>!!t,Y=t=>!t,Z=t=>new Proxy({},{get:()=>t}),w=t=>n=>i(n)&&t(n),m=t=>n=>O(n)&&t(n),_=t=>n=>(s(n)||i(n))&&t(n);return $;})();
