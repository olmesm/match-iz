/*
 * match-iz
 * v1.7.0
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var matchiz=(()=>{var x=Object.defineProperty;var R=t=>x(t,"__esModule",{value:!0});var $=typeof require!="undefined"?require:t=>{throw new Error('Dynamic require of "'+t+'" is not supported')};var W=(t,o)=>{R(t);for(var n in o)x(t,n,{get:o[n],enumerable:!0})};var _={};W(_,{against:()=>S,defined:()=>D,empty:()=>P,endsWith:()=>Q,falsy:()=>V,gt:()=>G,gte:()=>I,inRange:()=>K,includes:()=>T,isArray:()=>s,isFunction:()=>r,isNumber:()=>b,isPojo:()=>c,isRegExp:()=>f,isString:()=>i,lt:()=>H,lte:()=>J,match:()=>z,not:()=>X,otherwise:()=>B,spread:()=>Y,startsWith:()=>M,truthy:()=>U,when:()=>C});var N=Object.prototype,w=N.toString,u=t=>typeof t,F=t=>w.call(t)==="[object Arguments]",s=t=>Array.isArray(t),r=t=>u(t)==="function",b=t=>u(t)==="number",q=t=>u(t)==="object"&&t!==null,f=t=>t instanceof RegExp,i=t=>u(t)==="string",c=t=>t===null||!q(t)||F(t)?!1:Object.getPrototypeOf(t)===N;function z(t){return(...o)=>S(...o)(t)}function S(...t){let o;return n=>t.find(m=>{let p=m(n),{matched:A,value:O}=p||{};return[A,O].every(r)?A(n)&&(o=O(n),!0):p&&(o=p)})&&o}var B=t=>o=>({matched:()=>!0,value:()=>r(t)?t(o):t}),C=t=>o=>n=>({matched:()=>e(t,n),value:()=>r(o)?i(n)&&f(t)?o(n.match(t)):o(n):o}),e=(t,o)=>c(t)?Object.keys(t).every(n=>j(t[n],o==null?void 0:o[n])):s(t)?s(o)?t.length===o.length&&t.every((n,m)=>j(n,o==null?void 0:o[m])):t.some(n=>e(n,o)):j(t,o),j=(t,o)=>c(t)||s(t)?e(t,o):r(t)?t(o):i(o)&&f(t)?t.test(o):t===o||[t,o].every(Number.isNaN),P=t=>t!==t||!t&&t!==0&&t!==!1||s(t)&&!t.length||c(t)&&!Object.keys(t).length,D=t=>!P(t),G=t=>g(o=>o>t),H=t=>g(o=>o<t),I=t=>g(o=>o>=t),J=t=>g(o=>o<=t),K=(t,o)=>g(n=>n>=t&&n<=o),M=t=>E(o=>o.startsWith(t)),Q=t=>E(o=>o.endsWith(t)),T=t=>Z(o=>o.includes(t)),U=t=>!!t,V=t=>!t,X=t=>r(t)?o=>!t(o):o=>!Object.is(o,t),Y=t=>new Proxy({},{get:()=>t});function E(t){return o=>i(o)&&t(o)}function Z(t){return o=>(s(o)||i(o))&&t(o)}function g(t){return o=>b(o)&&t(o)}return _;})();
