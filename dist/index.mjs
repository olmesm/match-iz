/*
 * match-iz
 * v3.8.1
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var h=Object.defineProperty;var S=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var P=(t,n,e)=>n in t?h(t,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[n]=e,q=(t,n)=>{for(var e in n||(n={}))A.call(n,e)&&P(t,e,n[e]);if(S)for(var e of S(n))E.call(n,e)&&P(t,e,n[e]);return t};var D=(t,n)=>{var e={};for(var o in t)A.call(t,o)&&n.indexOf(o)<0&&(e[o]=t[o]);if(t!=null&&S)for(var o of S(t))n.indexOf(o)<0&&E.call(t,o)&&(e[o]=t[o]);return e};var C=(t,n)=>{for(var e in n)h(t,e,{get:n[e],enumerable:!0})};var N={};C(N,{instanceOf:()=>v,isArguments:()=>M,isArray:()=>J,isDate:()=>K,isFunction:()=>Q,isIterable:()=>_,isNumber:()=>X,isObject:()=>R,isPojo:()=>Z,isRegExp:()=>Y,isString:()=>T});var F=Object.prototype,G=F.toString,d=t=>n=>typeof n===t,v=t=>n=>n instanceof t,{isArray:J}=Array,M=t=>G.call(t)==="[object Arguments]",K=t=>v(Date)(t)&&!isNaN(t),Q=d("function"),T=d("string"),X=t=>t===t&&d("number")(t),R=t=>t!==null&&d("object")(t),Y=v(RegExp),Z=t=>t===null||!R(t)||M(t)?!1:Object.getPrototypeOf(t)===F,_=t=>t==null?!1:[t[Symbol.iterator],t.next].every(d("function"));var{isArray:m,isDate:mt,isFunction:p,isNumber:j}=N,{isPojo:O,isRegExp:z,isString:I,instanceOf:gt,isIterable:y}=N,{keys:g,entries:a,assign:k}=Object,l=2e4,pt=()=>l,Ot=t=>{let n=l;return l=t,()=>l=n};function wt(t){return(...n)=>tt(...n)(t)}var tt=(...t)=>n=>{let[e,o]=n instanceof Map?[!0,n.entries()]:n instanceof Set?[!0,n.values()]:[!1,n];if(!y(o))return V(...t)(o).result;let[i,u]=t.reduce(([s,f],w)=>nt(w)?[w,f]:[s,[...f,w]],[{value:()=>{}},[]]),c=[];do{let{value:s,done:f}=o.next();if(f)return i().value();c.push(s);let{found:w,result:B}=V(...u)(e?s:[...c]);if(w)return B}while(c.length<l||e);throw new Error(`Hit iterationLimit: ${l}. Use setIterationLimit(Infinity) to disable.`)},V=(...t)=>{let n;return e=>({found:!!t.find(i=>{let u=i(e),{matched:c,value:s}=u||{};return[c,s].every(p)?c(e)&&(n=s(e),!0):u&&(n=u)}),result:n})},H=Symbol("@@match-iz/otherwise"),nt=t=>(t==null?void 0:t[H])===!0,dt=t=>{let n=e=>({matched:()=>!0,value:()=>p(t)?t(e):t});return n[H]=!0,n},W=t=>n=>e=>({matched:()=>r(t,e,o=>e=o),value:()=>p(n)?I(e)&&z(t)?n(...et(e.match(t))):n(e):n}),bt=(...t)=>{if(t.length===1){let[n]=t;return W(n)}if(t.length===2){let[n,e]=t;return W(n)(e)}if(t.length>2){let n=t.slice(-1)[0],e=t.slice(0,-1);return W(it(e))(n)}throw new Error("expected 1 or 2 arguments")},et=t=>{let{groups:n}=t;return n?[n,t]:[t]},r=(t,n,e)=>O(t)?g(t).every(o=>r(t[o],n==null?void 0:n[o],e)):m(t)?m(n)&&t.length===n.length&&t.every((o,i)=>r(o,n==null?void 0:n[i],e)):p(t)?t(n,e):I(n)&&z(t)?t.test(n):t===n||[t,n].every(Number.isNaN),St=(...t)=>(n,e)=>t.length===0||(p(t[0])?t[0](n):r(t[0],n,e))?(e(n),!0):!1,ot=(t,n)=>[t,n].every(O)?g(t).length===g(n).length:!0,rt=t=>(n,e)=>ot(t,n)&&r(t,n,e),Nt=t=>x(t,n=>O(n)?rt(n):n),It=t=>(n,e)=>!r(t,n,e),st=(...t)=>(n,e)=>t.flat().some(o=>r(o,n,e)),it=(...t)=>(n,e)=>t.flat().every(o=>r(o,n,e)),vt=t=>$(n=>n.every(e=>r(t,e))),Wt=t=>$(n=>n.some(e=>r(t,e))),xt=(...t)=>L((n,e)=>t.length<=n.length&&r(t,n.slice(0,t.length),e)),Lt=(...t)=>L((n,e)=>t.length<=n.length&&r(t,n.slice(n.length-t.length),e)),ct=t=>t!==t||!t&&t!==0&&t!==!1||m(t)&&!t.length||O(t)&&!g(t).length,Pt=t=>!ct(t),ht=t=>b(n=>n>t),At=t=>b(n=>n<t),Et=t=>b(n=>n>=t),qt=t=>b(n=>n<=t),Dt=(t,n)=>b(e=>e>=Math.min(t,n)&&e<=Math.max(t,n)),Ft=t=>U(n=>n.startsWith(t)),Mt=t=>U(n=>n.endsWith(t)),Rt=t=>L(n=>n.includes(t)),Vt=st,zt=t=>n=>n===t,Ht=(...t)=>n=>O(n)&&(([e,o])=>e.length&&e.every(i=>o.includes(i)))([t.flat(),g(n)]),Ut=e=>{var o=e,{getValue:t}=o,n=D(o,["getValue"]);return a(n).reduce((i,[u,c])=>k(i,{[u]:s=>f=>({matched:()=>c(f),value:()=>p(s)?s(t(f)):s})}),{})},$t=t=>!!t,Bt=t=>!t,ut=t=>(n,e)=>(n[e]=x(n[e],t),n),ft=t=>n=>x(n,t),x=(t,n)=>n(O(t)?g(t).reduce(ut(n),q({},t)):m(t)?t.map(ft(n)):t),Ct=t=>new Proxy({},{get:()=>t}),U=t=>n=>I(n)&&t(n),b=t=>n=>j(n)&&t(n),$=t=>(n,e)=>m(n)&&t(n,e),L=t=>(n,e)=>(m(n)||I(n))&&t(n,e);export{tt as against,it as allOf,st as anyOf,Ut as cata,Nt as deepEq,Pt as defined,ct as empty,Mt as endsWith,rt as eq,vt as every,Bt as falsy,xt as firstOf,pt as getIterationLimit,ht as gt,Et as gte,Ht as hasOwn,Dt as inRange,Vt as includedIn,Rt as includes,gt as instanceOf,m as isArray,mt as isDate,p as isFunction,y as isIterable,j as isNumber,O as isPojo,z as isRegExp,zt as isStrictly,I as isString,Lt as lastOf,At as lt,qt as lte,wt as match,It as not,dt as otherwise,St as pluck,Ot as setIterationLimit,Wt as some,Ct as spread,Ft as startsWith,$t as truthy,bt as when};
