/*
 * match-iz
 * v2.3.1
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var R=Object.defineProperty;var S=Object.getOwnPropertySymbols;var E=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var P=(t,n)=>{var o={};for(var s in t)E.call(t,s)&&n.indexOf(s)<0&&(o[s]=t[s]);if(t!=null&&S)for(var s of S(t))n.indexOf(s)<0&&I.call(t,s)&&(o[s]=t[s]);return o};var q=(t,n)=>{for(var o in n)R(t,o,{get:n[o],enumerable:!0})};var u={};q(u,{instanceOf:()=>x,isArguments:()=>W,isArray:()=>B,isDate:()=>C,isFunction:()=>G,isNumber:()=>J,isObject:()=>A,isPojo:()=>L,isRegExp:()=>K,isString:()=>H});var w=Object.prototype,z=w.toString,m=t=>n=>typeof n===t,x=t=>n=>n instanceof t,{isArray:B}=Array,W=t=>z.call(t)==="[object Arguments]",C=t=>x(Date)(t)&&!isNaN(t),G=m("function"),H=m("string"),J=t=>t===t&&m("number")(t),A=t=>t!==null&&m("object")(t),K=x(RegExp),L=t=>t===null||!A(t)||W(t)?!1:Object.getPrototypeOf(t)===w;var{isArray:O,isDate:Z,isFunction:c,isNumber:M}=u,{isPojo:N,isRegExp:D,isString:p,instanceOf:_}=u;function $(t){return(...n)=>Q(...n)(t)}var Q=(...t)=>{let n;return o=>t.find(s=>{let r=s(o),{matched:g,value:f}=r||{};return[g,f].every(c)?g(o)&&(n=f(o),!0):r&&(n=r)})&&n},l=t=>n=>({matched:()=>!0,value:()=>c(t)?t(n):t}),d=t=>n=>o=>({matched:()=>i(t,o,s=>o=s),value:()=>c(n)?p(o)&&D(t)?n(...T(o.match(t))):n(o):n}),T=t=>{let{groups:n}=t;return n?[n,t]:[t]},i=(t,n,o)=>N(t)?Object.keys(t).every(s=>i(t[s],n==null?void 0:n[s],o)):O(t)?O(n)?t.length===n.length&&t.every((s,r)=>i(s,n==null?void 0:n[r],o)):t.some(s=>i(s,n,o)):c(t)?t(n,o):p(n)&&D(t)?t.test(n):t===n||[t,n].every(Number.isNaN),v=(...t)=>(n,o)=>t.length===0||(c(t[0])?t[0](n):i(t[0],n,o))?(o(n),!0):!1,y=t=>(n,o)=>!i(t,n,o),U=(...t)=>(n,o)=>t.flat().some(s=>i(s,n,o)),h=(...t)=>(n,o)=>t.flat().every(s=>i(s,n,o)),V=t=>t!==t||!t&&t!==0&&t!==!1||O(t)&&!t.length||N(t)&&!Object.keys(t).length,a=t=>!V(t),k=t=>e(n=>n>t),tt=t=>e(n=>n<t),nt=t=>e(n=>n>=t),ot=t=>e(n=>n<=t),st=(t,n)=>e(o=>o>=Math.min(t,n)&&o<=Math.max(t,n)),rt=t=>F(n=>n.startsWith(t)),it=t=>F(n=>n.endsWith(t)),ct=t=>X(n=>n.includes(t)),et=U,gt=(...t)=>n=>N(n)&&(([o,s])=>o.length&&o.every(r=>s.includes(r)))([t.flat(),Object.keys(n)]),ft=o=>{var s=o,{getValue:t}=s,n=P(s,["getValue"]);return Object.entries(n).reduce((r,[g,f])=>Object.assign(r,{[g]:b=>j=>({matched:()=>f(j),value:()=>c(b)?b(t(j)):b})}),{})},mt=t=>!!t,ut=t=>!t,Ot=t=>new Proxy({},{get:()=>t}),F=t=>n=>p(n)&&t(n),e=t=>n=>M(n)&&t(n),X=t=>n=>(O(n)||p(n))&&t(n);export{Q as against,h as allOf,U as anyOf,ft as cata,a as defined,V as empty,it as endsWith,ut as falsy,k as gt,nt as gte,gt as hasOwn,st as inRange,et as includedIn,ct as includes,_ as instanceOf,O as isArray,Z as isDate,c as isFunction,M as isNumber,N as isPojo,D as isRegExp,p as isString,tt as lt,ot as lte,$ as match,y as not,l as otherwise,v as pluck,Ot as spread,rt as startsWith,mt as truthy,d as when};
