/*
 * match-iz
 * v1.8.2
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var x=Object.defineProperty;var W=t=>x(t,"__esModule",{value:!0});var w=(t,n)=>{W(t);for(var o in n)x(t,o,{get:n[o],enumerable:!0})};w(exports,{against:()=>S,allOf:()=>C,anyOf:()=>j,defined:()=>D,empty:()=>P,endsWith:()=>Q,falsy:()=>X,gt:()=>G,gte:()=>J,inRange:()=>L,includedIn:()=>U,includes:()=>T,isArray:()=>s,isFunction:()=>r,isNumber:()=>O,isPojo:()=>m,isRegExp:()=>f,isString:()=>i,lt:()=>H,lte:()=>K,match:()=>q,not:()=>B,otherwise:()=>y,spread:()=>Y,startsWith:()=>M,truthy:()=>V,when:()=>z});var N=Object.prototype,E=N.toString,e=t=>n=>typeof n===t,F=t=>E.call(t)==="[object Arguments]",s=Array.isArray,r=e("function"),i=e("string"),O=t=>t===t&&e("number")(t),I=t=>t!==null&&e("object")(t),f=t=>t instanceof RegExp,m=t=>t===null||!I(t)||F(t)?!1:Object.getPrototypeOf(t)===N;function q(t){return(...n)=>S(...n)(t)}var S=(...t)=>{let n;return o=>t.find(p=>{let u=p(o),{matched:b,value:A}=u||{};return[b,A].every(r)?b(o)&&(n=A(o),!0):u&&(n=u)})&&n},y=t=>n=>({matched:()=>!0,value:()=>r(t)?t(n):t}),z=t=>n=>o=>({matched:()=>c(t,o),value:()=>r(n)?i(o)&&f(t)?n(o.match(t)):n(o):n}),c=(t,n)=>m(t)?Object.keys(t).every(o=>c(t[o],n==null?void 0:n[o])):s(t)?s(n)?t.length===n.length&&t.every((o,p)=>c(o,n==null?void 0:n[p])):t.some(o=>c(o,n)):r(t)?t(n):i(n)&&f(t)?t.test(n):t===n||[t,n].every(Number.isNaN),B=t=>n=>!c(t,n),j=(...t)=>t.flat(),C=(...t)=>n=>t.flat().every(o=>c(o,n)),P=t=>t!==t||!t&&t!==0&&t!==!1||s(t)&&!t.length||m(t)&&!Object.keys(t).length,D=t=>!P(t),G=t=>g(n=>n>t),H=t=>g(n=>n<t),J=t=>g(n=>n>=t),K=t=>g(n=>n<=t),L=(t,n)=>g(o=>o>=t&&o<=n),M=t=>R(n=>n.startsWith(t)),Q=t=>R(n=>n.endsWith(t)),T=t=>Z(n=>n.includes(t)),U=j,V=t=>!!t,X=t=>!t,Y=t=>new Proxy({},{get:()=>t}),R=t=>n=>i(n)&&t(n),g=t=>n=>O(n)&&t(n),Z=t=>n=>(s(n)||i(n))&&t(n);0&&(module.exports={against,allOf,anyOf,defined,empty,endsWith,falsy,gt,gte,inRange,includedIn,includes,isArray,isFunction,isNumber,isPojo,isRegExp,isString,lt,lte,match,not,otherwise,spread,startsWith,truthy,when});
