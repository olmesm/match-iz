/*
 * match-iz
 * v1.6.0
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var q=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports);var E=q((l,P)=>{var j=Object.prototype,F=j.toString,e=t=>typeof t,x=t=>F.call(t)==="[object Arguments]",y=t=>Array.isArray(t),z=t=>e(t)==="function",B=t=>e(t)==="number",S=t=>e(t)==="object"&&t!==null,C=t=>t instanceof RegExp,D=t=>e(t)==="string",G=t=>t===null||!S(t)||x(t)?!1:Object.getPrototypeOf(t)===j;P.exports={isArguments:x,isArray:y,isFunction:z,isNumber:B,isObject:S,isRegExp:C,isString:D,isPojo:G}});var{isArray:s,isFunction:r,isNumber:R,isRegExp:f,isString:i,isPojo:u}=E();function H(t){return(...n)=>W(...n)(t)}function W(...t){let n;return o=>t.find(g=>{let p=g(o),{matched:O,value:A}=p||{};return[O,A].every(r)?O(o)&&(n=A(o),!0):p&&(n=p)})&&n}var I=t=>n=>({matched:()=>!0,value:()=>r(t)?t(n):t}),J=t=>n=>o=>({matched:()=>m(t,o),value:()=>r(n)?i(o)&&f(t)?n(o.match(t)):n(o):n}),m=(t,n)=>u(t)?Object.keys(t).every(o=>b(t[o],n==null?void 0:n[o])):s(t)?s(n)?t.length===n.length&&t.every((o,g)=>b(o,n==null?void 0:n[g])):t.some(o=>m(o,n)):b(t,n),b=(t,n)=>u(t)?m(t,n):r(t)?t(n):i(n)&&f(t)?t.test(n):t===n,w=t=>t!==t||!t&&t!==0&&t!==!1||s(t)&&!t.length||u(t)&&!Object.keys(t).length,K=t=>!w(t),L=t=>c(n=>n>t),M=t=>c(n=>n<t),Q=t=>c(n=>n>=t),T=t=>c(n=>n<=t),U=(t,n)=>c(o=>o>=t&&o<=n),V=t=>N(n=>n.startsWith(t)),X=t=>N(n=>n.endsWith(t)),Y=t=>d(n=>n.includes(t)),Z=t=>!!t,_=t=>!t,$=t=>new Proxy({},{get:()=>t});function N(t){return n=>i(n)&&t(n)}function d(t){return n=>(s(n)||i(n))&&t(n)}function c(t){return n=>R(n)&&t(n)}module.exports={against:W,match:H,when:J,otherwise:I,defined:K,empty:w,gt:L,lt:M,gte:Q,lte:T,inRange:U,startsWith:V,endsWith:X,includes:Y,truthy:Z,falsy:_,spread:$,isArray:s,isFunction:r,isNumber:R,isRegExp:f,isString:i,isPojo:u};
