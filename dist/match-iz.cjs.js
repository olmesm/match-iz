/*
 * match-iz
 * v1.6.1
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var q=(t,n)=>()=>(n||t((n={exports:{}}).exports,n),n.exports);var P=q((h,S)=>{var j=Object.prototype,F=j.toString,g=t=>typeof t,x=t=>F.call(t)==="[object Arguments]",z=t=>Array.isArray(t),B=t=>g(t)==="function",C=t=>g(t)==="number",N=t=>g(t)==="object"&&t!==null,D=t=>t instanceof RegExp,G=t=>g(t)==="string",H=t=>t===null||!N(t)||x(t)?!1:Object.getPrototypeOf(t)===j;S.exports={isArguments:x,isArray:z,isFunction:B,isNumber:C,isObject:N,isRegExp:D,isString:G,isPojo:H}});var{isArray:r,isFunction:s,isNumber:E,isRegExp:p,isString:i,isPojo:u}=P();function I(t){return(...n)=>R(...n)(t)}function R(...t){let n;return o=>t.find(f=>{let m=f(o),{matched:O,value:A}=m||{};return[O,A].every(s)?O(o)&&(n=A(o),!0):m&&(n=m)})&&n}var J=t=>n=>({matched:()=>!0,value:()=>s(t)?t(n):t}),K=t=>n=>o=>({matched:()=>e(t,o),value:()=>s(n)?i(o)&&p(t)?n(o.match(t)):n(o):n}),e=(t,n)=>u(t)?Object.keys(t).every(o=>b(t[o],n==null?void 0:n[o])):r(t)?r(n)?t.length===n.length&&t.every((o,f)=>b(o,n==null?void 0:n[f])):t.some(o=>e(o,n)):b(t,n),b=(t,n)=>u(t)||r(t)?e(t,n):s(t)?t(n):i(n)&&p(t)?t.test(n):t===n||[t,n].every(Number.isNaN),W=t=>t!==t||!t&&t!==0&&t!==!1||r(t)&&!t.length||u(t)&&!Object.keys(t).length,L=t=>!W(t),M=t=>c(n=>n>t),Q=t=>c(n=>n<t),T=t=>c(n=>n>=t),U=t=>c(n=>n<=t),V=(t,n)=>c(o=>o>=t&&o<=n),X=t=>w(n=>n.startsWith(t)),Y=t=>w(n=>n.endsWith(t)),Z=t=>v(n=>n.includes(t)),_=t=>!!t,$=t=>!t,y=t=>new Proxy({},{get:()=>t});function w(t){return n=>i(n)&&t(n)}function v(t){return n=>(r(n)||i(n))&&t(n)}function c(t){return n=>E(n)&&t(n)}module.exports={against:R,match:I,when:K,otherwise:J,defined:L,empty:W,gt:M,lt:Q,gte:T,lte:U,inRange:V,startsWith:X,endsWith:Y,includes:Z,truthy:_,falsy:$,spread:y,isArray:r,isFunction:s,isNumber:E,isRegExp:p,isString:i,isPojo:u};
