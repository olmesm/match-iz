/*
 * match-iz
 * v1.1.1
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var R=(t,s)=>()=>(s||t((s={exports:{}}).exports,s),s.exports);var p=R((a,O)=>{var f=Object.prototype,c=t=>typeof t,W=f.toString,m=t=>W.call(t)==="[object Arguments]",w=t=>c(t)==="function",b=t=>c(t)==="object"&&t!==null,F=t=>Array.isArray(t),N=t=>t instanceof RegExp,q=t=>c(t)==="string",k=t=>c(t)==="number",M=t=>t===null||!b(t)||m(t)?!1:Object.getPrototypeOf(t)===f;O.exports={isArguments:m,isFunction:w,isObject:b,isArray:F,isRegExp:N,isString:q,isNumber:k,isPojo:M}});var{isFunction:e,isRegExp:A,isPojo:d,isArray:y,isString:i,isNumber:T}=p();function j(...t){let s;return n=>t.find(E=>{let r=E(n),{matched:u,value:g}=r||{};return[u,g].every(e)?u(n)&&(s=g(n),!0):r&&(s=r)})&&s}function l(t){return(...s)=>j(...s)(t)}var z=t=>s=>n=>({matched:()=>S(t,n),value:()=>e(s)?i(n)&&A(t)?s(n.match(t)):s(n):s}),B=t=>s=>e(t)?t(s):t,S=(t,s)=>d(t)?Object.keys(t).every(n=>x(t[n],s[n])):y(t)?t.some(n=>S(n,s)):x(t,s),x=(t,s)=>e(t)?t(s):i(s)&&A(t)?t.test(s):t===s,P=t=>t!==t||!t&&t!==0&&t!==!1||y(t)&&!t.length||d(t)&&!Object.keys(t).length,C=t=>!P(t),D=t=>o(s=>s>t),G=t=>o(s=>s<t),H=t=>o(s=>s>=t),I=t=>o(s=>s<=t),J=(t,s)=>o(n=>n>=t&&n<=s),K=t=>h(s=>s.startsWith(t)),L=t=>h(s=>s.endsWith(t)),Q=t=>_(s=>s.includes(t)),U=t=>t===!0,V=t=>t===!1,X=t=>!!t,Y=t=>!t,Z=t=>new Proxy({},{get:()=>t});function h(t){return(...s)=>s.every(i)&&t(...s)}function _(t){return(...s)=>s.every(n=>y(n)||i(n))&&t(...s)}function o(t){return(...s)=>s.every(T)&&t(...s)}module.exports={against:j,match:l,defined:C,empty:P,gt:D,lt:G,gte:H,lte:I,inRange:J,startsWith:K,endsWith:L,includes:Q,isTrue:U,isFalse:V,truthy:X,falsy:Y,spread:Z,when:z,otherwise:B};
