/*
 * match-iz
 * v1.0.2
 * https://github.com/shuckster/match-iz
 * License: MIT
 */
var E=(t,s)=>()=>(s||t((s={exports:{}}).exports,s),s.exports);var p=E((U,b)=>{var g=Object.prototype,e=t=>typeof t,R=g.toString,f=t=>R.call(t)==="[object Arguments]",W=t=>e(t)==="function",m=t=>e(t)==="object"&&t!==null,a=t=>Array.isArray(t),v=t=>t instanceof RegExp,w=t=>e(t)==="string",N=t=>e(t)==="number",l=t=>t===null||!m(t)||f(t)?!1:Object.getPrototypeOf(t)===g;b.exports={isArguments:f,isFunction:W,isObject:m,isArray:a,isRegExp:v,isString:w,isNumber:N,isPojo:l}});var{isFunction:c,isRegExp:A,isPojo:q,isArray:O,isString:i,isNumber:F}=p();function d(...t){let s;return n=>t.find(P=>{let r=P(n),{matched:u,value:y}=r||{};return[u,y].every(c)?u(n)&&(s=y(n),!0):r&&(s=r)})&&s}function h(t){return(...s)=>d(...s)(t)}var M=t=>s=>n=>({matched:()=>S(t,n),value:()=>c(s)?i(n)&&A(t)?s(n.match(t)):s(n):s}),_=t=>s=>c(t)?t(s):t,S=(t,s)=>q(t)?Object.keys(t).every(n=>j(t[n],s[n])):O(t)?t.some(n=>S(n,s)):j(t,s),j=(t,s)=>c(t)?t(s):i(s)&&A(t)?t.test(s):t===s,k=()=>t=>!!t,z=()=>t=>!t,B=t=>o(s=>s>t),C=t=>o(s=>s<t),D=t=>o(s=>s>=t),G=t=>o(s=>s<=t),H=o((t,s)=>n=>n>=t&&n<=s),I=t=>x(s=>s.startsWith(t)),J=t=>x(s=>s.endsWith(t)),K=t=>Q(s=>s.includes(t)),L=t=>new Proxy({},{get:(s,n)=>t(n)});function x(t){return(...s)=>s.every(i)&&t(...s)}function Q(t){return(...s)=>s.every(n=>O(n)||i(n))&&t(...s)}function o(t){return(...s)=>s.every(F)&&t(...s)}module.exports={against:d,match:h,defined:k,empty:z,gt:B,lt:C,gte:D,lte:G,inRange:H,startsWith:I,endsWith:J,includes:K,spread:L,when:M,otherwise:_};
